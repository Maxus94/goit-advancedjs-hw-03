{"version":3,"file":"commonHelpers.js","sources":["../src/cat-api.js","../src/index.js"],"sourcesContent":["export const API_URL = 'https://api.thecatapi.com/v1/';\nexport const API_BREEDS = 'breeds';\nexport const API_FUL_INFO = 'images';\nexport function fetchBreeds() {\n  return fetch(`${API_URL}${API_BREEDS}`)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error('Error in breeds search');\n      }\n      const responseJSON = response.json();\n      console.log(responseJSON);\n      return responseJSON;\n    })\n    .catch(err => console.log(err));\n}\n//const MY_API_KEY='live_CYfDoS5dNeACSCwYtMK32XB821HsGAUlrTtg1vSBWMymimcVnHbbjgtqAnOT394U';\nexport function fetchCatByBreed(breedId) {\n    \n    //https://api.thecatapi.com/v1/images/search?breed_ids=ідентифікатор_породи\n        //return (fetch(`//https://api.thecatapi.com/v1/images/search?api_key=${MY_API_KEY}&breed_ids=${breedId}`)\n      return (fetch(`${API_URL}${API_FUL_INFO}/search?breed_ids=${breedId}`)\n      .then(response => {\n        if (!response.ok) {\n          throw new Error('Error in breeds search');\n        }\n        return response.json();\n      })\n      .catch(err => console.log(err))\n  );\n}\n","import axios from 'axios';\nimport { fetchBreeds, fetchCatByBreed } from './cat-api';\n\naxios.defaults.headers.common['x-api-key'] =\n  'live_CYfDoS5dNeACSCwYtMK32XB821HsGAUlrTtg1vSBWMymimcVnHbbjgtqAnOT394U';\n\nconst breedsListSelect = document.querySelector('.breed-select');\nconst loadStatus = document.querySelector('.loader');\nconst errorStatus = document.querySelector('.error');\n//let breedID;\nloadStatus.setAttribute('hidden', true);\nerrorStatus.setAttribute('hidden', true);\n\nconst arr = fetchBreeds()\n  .then(data => {\n    breedsListSelect.innerHTML = createMarkup(data);\n  })\n  .catch(err => {\n    errorStatus.removeAttribute('hidden');\n    console.log(err);\n  });\n\nbreedsListSelect.addEventListener('input', selectBreedHandler);\nfunction selectBreedHandler(evt) {\n  breedsListSelect.setAttribute('hidden', true);\n  loadStatus.removeAttribute('hidden');\n  const breedID = evt.currentTarget.value;\n  console.log(breedID);\n  fetchCatByBreed(breedID).then(data => {\n    breedsListSelect.removeAttribute('hidden');\n    loadStatus.setAttribute('hidden', true);\n    console.log(data);\n  });\n}\nfunction createMarkup(arr) {\n  return arr.map(({ id, name }) => `<option value = ${id}>${name}</option>`);\n}\n"],"names":["API_URL","API_BREEDS","API_FUL_INFO","fetchBreeds","response","responseJSON","err","fetchCatByBreed","breedId","axios","breedsListSelect","loadStatus","errorStatus","data","createMarkup","selectBreedHandler","evt","breedID","arr","id","name"],"mappings":"ivBAAO,MAAMA,EAAU,gCACVC,EAAa,SACbC,EAAe,SACrB,SAASC,GAAc,CAC5B,OAAO,MAAM,GAAGH,IAAUC,GAAY,EACnC,KAAKG,GAAY,CAChB,GAAI,CAACA,EAAS,GACZ,MAAM,IAAI,MAAM,wBAAwB,EAE1C,MAAMC,EAAeD,EAAS,OAC9B,eAAQ,IAAIC,CAAY,EACjBA,CACb,CAAK,EACA,MAAMC,GAAO,QAAQ,IAAIA,CAAG,CAAC,CAClC,CAEO,SAASC,EAAgBC,EAAS,CAInC,OAAQ,MAAM,GAAGR,IAAUE,sBAAiCM,GAAS,EACpE,KAAKJ,GAAY,CAChB,GAAI,CAACA,EAAS,GACZ,MAAM,IAAI,MAAM,wBAAwB,EAE1C,OAAOA,EAAS,MACxB,CAAO,EACA,MAAME,GAAO,QAAQ,IAAIA,CAAG,CAAC,CAEpC,CC1BAG,EAAM,SAAS,QAAQ,OAAO,aAC5B,wEAEF,MAAMC,EAAmB,SAAS,cAAc,eAAe,EACzDC,EAAa,SAAS,cAAc,SAAS,EAC7CC,EAAc,SAAS,cAAc,QAAQ,EAEnDD,EAAW,aAAa,SAAU,EAAI,EACtCC,EAAY,aAAa,SAAU,EAAI,EAE3BT,EAAa,EACtB,KAAKU,GAAQ,CACZH,EAAiB,UAAYI,EAAaD,CAAI,CAClD,CAAG,EACA,MAAMP,GAAO,CACZM,EAAY,gBAAgB,QAAQ,EACpC,QAAQ,IAAIN,CAAG,CACnB,CAAG,EAEHI,EAAiB,iBAAiB,QAASK,CAAkB,EAC7D,SAASA,EAAmBC,EAAK,CAC/BN,EAAiB,aAAa,SAAU,EAAI,EAC5CC,EAAW,gBAAgB,QAAQ,EACnC,MAAMM,EAAUD,EAAI,cAAc,MAClC,QAAQ,IAAIC,CAAO,EACnBV,EAAgBU,CAAO,EAAE,KAAKJ,GAAQ,CACpCH,EAAiB,gBAAgB,QAAQ,EACzCC,EAAW,aAAa,SAAU,EAAI,EACtC,QAAQ,IAAIE,CAAI,CACpB,CAAG,CACH,CACA,SAASC,EAAaI,EAAK,CACzB,OAAOA,EAAI,IAAI,CAAC,CAAE,GAAAC,EAAI,KAAAC,CAAM,IAAK,mBAAmBD,KAAMC,YAAe,CAC3E"}